!function(){var e=angular.module("app",["ngAnimate"]);e.controller("TabController",["$scope",function(e){e.phoneScreens=[{title:"About",img:"img/1.png",description:"Amlgam is a messaging app that connects user with his lovely messengers."},{title:"Switching",img:"img/2.png",description:"We want Amlgam to be simple for everybody. So now switching is 1 tap, no more."},{title:"Custom answers",img:"img/3.png",description:"To be competitive is to be fast. Now you can use your custom messages for answering."}],e.direction="left",e.currentIndex=0,e.setCurrentSlideIndex=function(n){e.direction=n>e.currentIndex?"left":"right",e.currentIndex=n},e.isCurrentSlideIndex=function(n){return e.currentIndex===n}}]).animation(".slide-animation",function(){var e=0;return console.log(window.innerWidth),e=window.innerWidth>710?281:234,{beforeAddClass:function(n,i,t){var o=n.scope();if("ng-hide"==i){var r=n.parent().width();"right"!==o.direction&&(r=-r),TweenMax.fromTo(n,.5,{left:0},{left:-e,"z-index":-3,onComplete:t})}else t()},removeClass:function(n,i,t){var o=n.scope();if("ng-hide"==i){n.removeClass("ng-hide");var r=n.parent().width();"right"===o.direction&&(r=-r),TweenMax.fromTo(n,.5,{left:e,"z-index":-2},{left:0,onComplete:t})}else t()}}}),e.controller("EmailController",["$scope",function(e){function n(e){mixpanel.people.set({$email:e,$last_login:new Date})}e.user=null;var i="123456789";if(!t)var t=0;for(var o=0;10>o;o++)t+=i.charAt(Math.floor(Math.random()*i.length));t&&mixpanel.identify(t),e.addUser=function(){e.user&&n(e.user)}}])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCJwaG9uZVNjcmVlbnMiLCJ0aXRsZSIsImltZyIsImRlc2NyaXB0aW9uIiwiZGlyZWN0aW9uIiwiY3VycmVudEluZGV4Iiwic2V0Q3VycmVudFNsaWRlSW5kZXgiLCJpbmRleCIsImlzQ3VycmVudFNsaWRlSW5kZXgiLCJhbmltYXRpb24iLCJ3aWR0aCIsImNvbnNvbGUiLCJsb2ciLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiYmVmb3JlQWRkQ2xhc3MiLCJlbGVtZW50IiwiY2xhc3NOYW1lIiwiZG9uZSIsInNjb3BlIiwiZmluaXNoUG9pbnQiLCJwYXJlbnQiLCJUd2Vlbk1heCIsImZyb21UbyIsImxlZnQiLCJ6LWluZGV4Iiwib25Db21wbGV0ZSIsInJlbW92ZUNsYXNzIiwic3RhcnRQb2ludCIsInNlbmRNaXhQYW5lbCIsIm5ld1VzZXIiLCJtaXhwYW5lbCIsInBlb3BsZSIsInNldCIsIiRlbWFpbCIsIiRsYXN0X2xvZ2luIiwiRGF0ZSIsInVzZXIiLCJwb3NzaWJsZSIsInVuaXF1ZSIsImkiLCJjaGFyQXQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJsZW5ndGgiLCJpZGVudGlmeSIsImFkZFVzZXIiXSwibWFwcGluZ3MiOiJDQUFBLFdBQ0ksR0FBSUEsR0FBTUMsUUFBUUMsT0FBTyxPQUFRLGFBQ2pDRixHQUFJRyxXQUFXLGlCQUFpQixTQUFXLFNBQVVDLEdBRWpEQSxFQUFPQyxlQUNIQyxNQUFPLFFBQ1BDLElBQUssWUFDTEMsWUFBYSw2RUFFYkYsTUFBTyxZQUNQQyxJQUFLLFlBQ0xDLFlBQWEsbUZBRWJGLE1BQU8saUJBQ1BDLElBQUssWUFFTEMsWUFBYSx5RkFFakJKLEVBQU9LLFVBQVksT0FDbkJMLEVBQU9NLGFBQWUsRUFFdEJOLEVBQU9PLHFCQUF1QixTQUFVQyxHQUNwQ1IsRUFBT0ssVUFBYUcsRUFBUVIsRUFBT00sYUFBZ0IsT0FBUyxRQUM1RE4sRUFBT00sYUFBZUUsR0FHMUJSLEVBQU9TLG9CQUFzQixTQUFVRCxHQUNuQyxNQUFPUixHQUFPTSxlQUFpQkUsTUFJbENFLFVBQVUsbUJBQW9CLFdBQzNCLEdBQUlDLEdBQU8sQ0FLWCxPQUpBQyxTQUFRQyxJQUFJQyxPQUFPQyxZQUVmSixFQURBRyxPQUFPQyxXQUFhLElBQ1osSUFDQyxLQUVUQyxlQUFnQixTQUFVQyxFQUFTQyxFQUFXQyxHQUMxQyxHQUFJQyxHQUFRSCxFQUFRRyxPQUVwQixJQUFpQixXQUFiRixFQUF3QixDQUN4QixHQUFJRyxHQUFjSixFQUFRSyxTQUFTWCxPQUNaLFdBQXBCUyxFQUFNZixZQUNMZ0IsR0FBZUEsR0FFbkJFLFNBQVNDLE9BQU9QLEVBQVMsSUFBTVEsS0FBSyxJQUFLQSxNQUFPZCxFQUFNZSxVQUFVLEdBQUlDLFdBQVlSLFFBR2hGQSxNQUdSUyxZQUFhLFNBQVVYLEVBQVNDLEVBQVdDLEdBQ3ZDLEdBQUlDLEdBQVFILEVBQVFHLE9BRXBCLElBQWlCLFdBQWJGLEVBQXdCLENBQ3hCRCxFQUFRVyxZQUFZLFVBRXBCLElBQUlDLEdBQWFaLEVBQVFLLFNBQVNYLE9BQ1gsV0FBcEJTLEVBQU1mLFlBQ0x3QixHQUFjQSxHQUVsQk4sU0FBU0MsT0FBT1AsRUFBUyxJQUFPUSxLQUFNZCxFQUFNZSxVQUFVLEtBQU9ELEtBQU0sRUFBR0UsV0FBWVIsUUFHbEZBLFNBTXBCdkIsRUFBSUcsV0FBVyxtQkFBb0IsU0FBVSxTQUFVQyxHQVduRCxRQUFTOEIsR0FBYUMsR0FDbEJDLFNBQVNDLE9BQU9DLEtBQ1pDLE9BQVVKLEVBQ1ZLLFlBQWUsR0FBSUMsUUFiM0JyQyxFQUFPc0MsS0FBTyxJQUNkLElBQUlDLEdBQVcsV0FDZixLQUFJQyxFQUNBLEdBQUlBLEdBQVMsQ0FDakIsS0FBSyxHQUFJQyxHQUFFLEVBQU8sR0FBSkEsRUFBUUEsSUFDbEJELEdBQVVELEVBQVNHLE9BQU9DLEtBQUtDLE1BQU1ELEtBQUtFLFNBQVdOLEVBQVNPLFFBRS9ETixJQUNDUixTQUFTZSxTQUFTUCxHQVF0QnhDLEVBQU9nRCxRQUFVLFdBQ1RoRCxFQUFPc0MsTUFDWFIsRUFBYTlCLEVBQU9zQyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCkge1xuICAgIHZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnYXBwJywgWyduZ0FuaW1hdGUnXSk7XG4gICAgYXBwLmNvbnRyb2xsZXIoXCJUYWJDb250cm9sbGVyXCIsWyckc2NvcGUnLCAgZnVuY3Rpb24gKCRzY29wZSkge1xuXG4gICAgICAgICRzY29wZS5waG9uZVNjcmVlbnMgPSBbe1xuICAgICAgICAgICAgdGl0bGU6IFwiQWJvdXRcIixcbiAgICAgICAgICAgIGltZzogXCJpbWcvMS5wbmdcIixcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkFtbGdhbSBpcyBhIG1lc3NhZ2luZyBhcHAgdGhhdCBjb25uZWN0cyB1c2VyIHdpdGggaGlzIGxvdmVseSBtZXNzZW5nZXJzLlwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIHRpdGxlOiBcIlN3aXRjaGluZ1wiLFxuICAgICAgICAgICAgaW1nOiBcImltZy8yLnBuZ1wiLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiV2Ugd2FudCBBbWxnYW0gdG8gYmUgc2ltcGxlIGZvciBldmVyeWJvZHkuIFNvIG5vdyBzd2l0Y2hpbmcgaXMgMSB0YXAsIG5vIG1vcmUuXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgICAgdGl0bGU6IFwiQ3VzdG9tIGFuc3dlcnNcIixcbiAgICAgICAgICAgIGltZzogXCJpbWcvMy5wbmdcIixcblxuICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiVG8gYmUgY29tcGV0aXRpdmUgaXMgdG8gYmUgZmFzdC4gTm93IHlvdSBjYW4gdXNlIHlvdXIgY3VzdG9tIG1lc3NhZ2VzIGZvciBhbnN3ZXJpbmcuXCJcbiAgICAgICAgfV07XG4gICAgICAgICRzY29wZS5kaXJlY3Rpb24gPSAnbGVmdCc7XG4gICAgICAgICRzY29wZS5jdXJyZW50SW5kZXggPSAwO1xuXG4gICAgICAgICRzY29wZS5zZXRDdXJyZW50U2xpZGVJbmRleCA9IGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICAgICAgJHNjb3BlLmRpcmVjdGlvbiA9IChpbmRleCA+ICRzY29wZS5jdXJyZW50SW5kZXgpID8gJ2xlZnQnIDogJ3JpZ2h0JztcbiAgICAgICAgICAgICRzY29wZS5jdXJyZW50SW5kZXggPSBpbmRleDtcbiAgICAgICAgfTtcblxuICAgICAgICAkc2NvcGUuaXNDdXJyZW50U2xpZGVJbmRleCA9IGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICAgICAgcmV0dXJuICRzY29wZS5jdXJyZW50SW5kZXggPT09IGluZGV4O1xuICAgICAgICB9O1xuXG4gICAgICAgIH1dKVxuICAgICAgICAuYW5pbWF0aW9uKCcuc2xpZGUtYW5pbWF0aW9uJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHdpZHRoID0wO1xuICAgICAgICAgICAgY29uc29sZS5sb2cod2luZG93LmlubmVyV2lkdGgpO1xuICAgICAgICAgICAgaWYgKHdpbmRvdy5pbm5lcldpZHRoID4gNzEwKVxuICAgICAgICAgICAgICAgIHdpZHRoID0gMjgxO1xuICAgICAgICAgICAgZWxzZSB3aWR0aCA9IDIzNDtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYmVmb3JlQWRkQ2xhc3M6IGZ1bmN0aW9uIChlbGVtZW50LCBjbGFzc05hbWUsIGRvbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNjb3BlID0gZWxlbWVudC5zY29wZSgpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChjbGFzc05hbWUgPT0gJ25nLWhpZGUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmluaXNoUG9pbnQgPSBlbGVtZW50LnBhcmVudCgpLndpZHRoKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZihzY29wZS5kaXJlY3Rpb24gIT09ICdyaWdodCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaW5pc2hQb2ludCA9IC1maW5pc2hQb2ludDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIFR3ZWVuTWF4LmZyb21UbyhlbGVtZW50LCAwLjUsIHtsZWZ0OjB9LCB7bGVmdDogLXdpZHRoLFwiei1pbmRleFwiOi0zLCBvbkNvbXBsZXRlOiBkb25lIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICByZW1vdmVDbGFzczogZnVuY3Rpb24gKGVsZW1lbnQsIGNsYXNzTmFtZSwgZG9uZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2NvcGUgPSBlbGVtZW50LnNjb3BlKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGNsYXNzTmFtZSA9PSAnbmctaGlkZScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQucmVtb3ZlQ2xhc3MoJ25nLWhpZGUnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXJ0UG9pbnQgPSBlbGVtZW50LnBhcmVudCgpLndpZHRoKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZihzY29wZS5kaXJlY3Rpb24gPT09ICdyaWdodCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydFBvaW50ID0gLXN0YXJ0UG9pbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBUd2Vlbk1heC5mcm9tVG8oZWxlbWVudCwgMC41LCB7IGxlZnQ6IHdpZHRoLFwiei1pbmRleFwiOi0yIH0sIHtsZWZ0OiAwLCBvbkNvbXBsZXRlOiBkb25lIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG5cbiAgICBhcHAuY29udHJvbGxlcihcIkVtYWlsQ29udHJvbGxlclwiLCBbJyRzY29wZScsIGZ1bmN0aW9uICgkc2NvcGUpIHtcbiAgICAgICAgJHNjb3BlLnVzZXIgPSBudWxsO1xuICAgICAgICB2YXIgcG9zc2libGUgPSBcIjEyMzQ1Njc4OVwiO1xuICAgICAgICBpZighdW5pcXVlKVxuICAgICAgICAgICAgdmFyIHVuaXF1ZSA9IDA7XG4gICAgICAgIGZvciggdmFyIGk9MDsgaSA8IDEwOyBpKysgKXtcbiAgICAgICAgICAgIHVuaXF1ZSArPSBwb3NzaWJsZS5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcG9zc2libGUubGVuZ3RoKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYodW5pcXVlKSB7XG4gICAgICAgICAgICBtaXhwYW5lbC5pZGVudGlmeSh1bmlxdWUpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNlbmRNaXhQYW5lbChuZXdVc2VyKSB7XG4gICAgICAgICAgICBtaXhwYW5lbC5wZW9wbGUuc2V0KHtcbiAgICAgICAgICAgICAgICBcIiRlbWFpbFwiOiBuZXdVc2VyLFxuICAgICAgICAgICAgICAgIFwiJGxhc3RfbG9naW5cIjogbmV3IERhdGUoKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgJHNjb3BlLmFkZFVzZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmKCEkc2NvcGUudXNlcikgcmV0dXJuO1xuICAgICAgICAgICAgc2VuZE1peFBhbmVsKCRzY29wZS51c2VyKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfTtcbiAgICB9XSk7XG5cbn0pKCk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
